// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tactical.Monopoly.Queries.EF;

#nullable disable

namespace Tactical.Monopoly.Queries.EF.Migrations
{
    [DbContext(typeof(RetrievalDbContext))]
    partial class RetrievalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("GameStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Board", (string)null);
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.BoardScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("BoardScore", (string)null);
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Cell", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Buyable")
                        .HasColumnType("boolean");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<bool>("Manufacturable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfHouse")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<short>("Position")
                        .HasColumnType("smallint");

                    b.Property<short>("Price")
                        .HasColumnType("smallint");

                    b.Property<int>("PriceOfHouse")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Cell", (string)null);
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BoardId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.PlayerId", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<short>("CellId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("Value")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("PlayerId", (string)null);
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.BoardScore", b =>
                {
                    b.HasOne("Tactical.Monopoly.Queries.EF.Models.Board", "Board")
                        .WithMany("BoardScores")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Cell", b =>
                {
                    b.HasOne("Tactical.Monopoly.Queries.EF.Models.Board", "Board")
                        .WithMany("Cells")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.PlayerId", b =>
                {
                    b.HasOne("Tactical.Monopoly.Queries.EF.Models.Cell", "Cell")
                        .WithMany("PlayerIds")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Board", b =>
                {
                    b.Navigation("BoardScores");

                    b.Navigation("Cells");
                });

            modelBuilder.Entity("Tactical.Monopoly.Queries.EF.Models.Cell", b =>
                {
                    b.Navigation("PlayerIds");
                });
#pragma warning restore 612, 618
        }
    }
}
